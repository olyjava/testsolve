import java.util.HashSet;
import java.util.Set;

/* 
Equals and HashCode
*/
public class Solution {
    private final String first, last;

    public Solution(String first, String last) {
        this.first = first;
        this.last = last;
    }

   @Override
    public boolean equals(Object obj) {
    if (obj == this) {
        return true;
    }
    if (!(obj instanceof Solution)) return false;
    if (obj == null || obj.getClass() != this.getClass()) {
        return false;
    }

    Solution guest = (Solution) obj;
    return 
     (first == guest.first && last == guest.last)
            || (first != null &&first.equals(guest.first))   && (last == guest.last
            || (last != null && last .equals(guest.last)
            ));
    }
    @Override
    public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((first == null) ? 0 : first.hashCode()); 
    result = prime * result; result = prime * result +
        ((last == null) ? 0 : last.hashCode()); return result;

    
    }

    public static void main(String[] args) {
        Set<Solution> s = new HashSet<>();
        s.add(new Solution("Donald", "Duck"));
        System.out.println(s.contains(new Solution("Donald", "Duck")));
    }
}
